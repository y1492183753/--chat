{"remainingRequest":"D:\\im-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\im-ui\\src\\components\\chat\\ChatPrivateVideo.vue?vue&type=style&index=0&id=33517ac7&lang=scss&scoped=true","dependencies":[{"path":"D:\\im-ui\\src\\components\\chat\\ChatPrivateVideo.vue","mtime":1703809564000},{"path":"D:\\im-ui\\node_modules\\css-loader\\dist\\cjs.js","mtime":1710142168000},{"path":"D:\\im-ui\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1710142170000},{"path":"D:\\im-ui\\node_modules\\postcss-loader\\src\\index.js","mtime":1710142168000},{"path":"D:\\im-ui\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1710142170000},{"path":"D:\\im-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1710142170000},{"path":"D:\\im-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":1710142168000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5jaGF0LXZpZGVvIHsKCXBvc2l0aW9uOiByZWxhdGl2ZTsKCgkuY2hhdC12aWRlby1ib3ggewoJCXBvc2l0aW9uOiByZWxhdGl2ZTsKCQlib3JkZXI6ICM0ODgwYjkgc29saWQgMXB4OwoJCWJhY2tncm91bmQtY29sb3I6ICNlZWVlZWU7CgoJCS5jaGF0LXZpZGVvLWZyaWVuZCB7CgkJCWhlaWdodDogNzB2aDsKCgkJCS5mcmllbmQtaGVhZC1pbWFnZSB7CgkJCQlwb3NpdGlvbjogYWJzb2x1dGU7CgkJCX0KCgkJCXZpZGVvIHsKCQkJCXdpZHRoOiAxMDAlOwoJCQkJaGVpZ2h0OiAxMDAlOwoJCQkJb2JqZWN0LWZpdDogZmlsbDsKCQkJfQoJCX0KCgkJLmNoYXQtdmlkZW8tbWluZSB7CgkJCXBvc2l0aW9uOiBhYnNvbHV0ZTsKCQkJei1pbmRleDogOTk5OTk7CgkJCXdpZHRoOiAyNXZoOwoJCQlyaWdodDogMDsKCQkJYm90dG9tOiAwOwoJCQlib3gtc2hhZG93OiAwcHggMHB4IDVweCAjY2NjOwoJCQliYWNrZ3JvdW5kLWNvbG9yOiAjY2NjY2NjOwoKCQkJdmlkZW8gewoJCQkJd2lkdGg6IDEwMCU7CgkJCX0KCQl9Cgl9CgoJLmNoYXQtdmlkZW8tY29udHJvbGxiYXIgewoJCWRpc3BsYXk6IGZsZXg7CgkJanVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7CgkJcGFkZGluZzogMTBweDsKCgkJLmljb24gewoJCQlmb250LXNpemU6IDUwcHg7CgkJCWN1cnNvcjogcG9pbnRlcjsKCQl9Cgl9Cn0K"},{"version":3,"sources":["ChatPrivateVideo.vue"],"names":[],"mappings":";AA2ZA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"ChatPrivateVideo.vue","sourceRoot":"src/components/chat","sourcesContent":["<template>\n\t<el-dialog v-dialogDrag :title=\"title\" top=\"5vh\" :close-on-click-modal=\"false\" :close-on-press-escape=\"false\"\n\t\t:visible.sync=\"visible\" width=\"50%\" height=\"70%\" :before-close=\"handleClose\">\n\t\t<div class=\"chat-video\">\n\t\t\t<div class=\"chat-video-box\">\n\t\t\t\t<div class=\"chat-video-friend\" v-loading=\"loading\" element-loading-text=\"等待对方接听...\"\n\t\t\t\t\telement-loading-spinner=\"el-icon-loading\" element-loading-background=\"rgba(0, 0, 0, 0.5)\">\n\t\t\t\t\t<head-image class=\"friend-head-image\" \n\t\t\t\t\t\t:id=\"friend.id\" :size=\"80\" :name=\"friend.nickName\"\n\t\t\t\t\t\t:url=\"friend.headImage\">\n\t\t\t\t\t</head-image>\n\t\t\t\t\t<video ref=\"friendVideo\" autoplay=\"\"></video>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"chat-video-mine\">\n\t\t\t\t\t<video ref=\"mineVideo\" autoplay=\"\"></video>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"chat-video-controllbar\">\n\t\t\t\t<div v-show=\"state=='CONNECTING'\" title=\"取消呼叫\" class=\"icon iconfont icon-phone-reject reject\"\n\t\t\t\t\tstyle=\"color: red;\" @click=\"cancel()\"></div>\n\t\t\t\t<div v-show=\"state=='CONNECTED'\" title=\"挂断\" class=\"icon iconfont icon-phone-reject reject\"\n\t\t\t\t\tstyle=\"color: red;\" @click=\"handup()\"></div>\n\t\t\t</div>\n\t\t</div>\n\t</el-dialog>\n\n</template>\n\n<script>\n\timport HeadImage from '../common/HeadImage.vue';\n\n\texport default {\n\t\tname: 'chatVideo',\n\t\tcomponents: {\n\t\t\tHeadImage\n\t\t},\n\t\tprops: {\n\t\t\tvisible: {\n\t\t\t\ttype: Boolean\n\t\t\t},\n\t\t\tfriend: {\n\t\t\t\ttype: Object\n\t\t\t},\n\t\t\tmaster: {\n\t\t\t\ttype: Boolean\n\t\t\t},\n\t\t\toffer: {\n\t\t\t\ttype: Object\n\t\t\t}\n\t\t},\n\t\tdata() {\n\t\t\treturn {\n\t\t\t\tcallerId: null,\n\t\t\t\tstream: null,\n\t\t\t\taudio: new Audio(),\n\t\t\t\tloading: false,\n\t\t\t\tpeerConnection: null,\n\t\t\t\tvideoTime: 0,\n\t\t\t\tvideoTimer: null,\n\t\t\t\tstate: 'NOT_CONNECTED',\n\t\t\t\tcandidates: [],\n\t\t\t\tconfiguration: {\n\t\t\t\t\ticeServers: []\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tmethods: {\n\t\t\tinit() {\n\t\t\t\tif (!this.hasUserMedia() || !this.hasRTCPeerConnection()) {\n\t\t\t\t\tthis.$message.error(\"初始化失败，原因可能是: 1.未部署ssl证书 2.您的浏览器不支持WebRTC\");\n\t\t\t\t\tif (!this.master) {\n\t\t\t\t\t\tthis.sendFailed(\"对方浏览器不支持WebRTC\")\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t// 打开摄像头\n\t\t\t\tthis.openCamera((stream) => {\n\t\t\t\t\t// 初始化webrtc连接\n\t\t\t\t\tthis.setupPeerConnection(stream);\n\t\t\t\t\tif (this.master) {\n\t\t\t\t\t\t// 发起呼叫\n\t\t\t\t\t\tthis.call();\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// 接受呼叫\n\t\t\t\t\t\tthis.accept(this.offer);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\t\t\topenCamera(callback) {\n\t\t\t\tnavigator.getUserMedia({\n\t\t\t\t\t\tvideo: true,\n\t\t\t\t\t\taudio: true\n\t\t\t\t\t},\n\t\t\t\t\t(stream) => {\n\t\t\t\t\t\tthis.stream = stream;\n\t\t\t\t\t\tconsole.log(this.stream)\n\t\t\t\t\t\tthis.$refs.mineVideo.srcObject = stream;\n\t\t\t\t\t\tthis.$refs.mineVideo.muted = true;\n\t\t\t\t\t\tcallback(stream)\n\t\t\t\t\t},\n\t\t\t\t\t(error) => {\n\t\t\t\t\t\tthis.$message.error(\"打开摄像头失败:\" + error);\n\t\t\t\t\t\tcallback()\n\t\t\t\t\t});\n\t\t\t},\n\t\t\tcloseCamera() {\n\t\t\t\tif (this.stream) {\n\t\t\t\t\tthis.stream.getTracks().forEach((track) => {\n\t\t\t\t\t\ttrack.stop();\n\t\t\t\t\t});\n\t\t\t\t\tthis.$refs.mineVideo.srcObject = null;\n\t\t\t\t\tthis.stream = null;\n\t\t\t\t}\n\n\t\t\t},\n\t\t\tsetupPeerConnection(stream) {\n\t\t\t\tthis.peerConnection = new RTCPeerConnection(this.configuration);\n\t\t\t\tthis.peerConnection.ontrack = (e) => {\n\t\t\t\t\tthis.$refs.friendVideo.srcObject = e.streams[0];\n\t\t\t\t};\n\t\t\t\tthis.peerConnection.onicecandidate = (event) => {\n\t\t\t\t\tif (event.candidate) {\n\t\t\t\t\t\tif (this.state == 'CONNECTED') {\n\t\t\t\t\t\t\t// 已连接,直接发送\n\t\t\t\t\t\t\tthis.sendCandidate(event.candidate);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// 未连接,缓存起来，连接后再发送\n\t\t\t\t\t\t\tthis.candidates.push(event.candidate)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (stream) {\n\t\t\t\t\tstream.getTracks().forEach((track) => {\n\t\t\t\t\t\tthis.peerConnection.addTrack(track, stream);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tthis.peerConnection.oniceconnectionstatechange = (event) => {\n\t\t\t\t\tlet state = event.target.iceConnectionState;\n\t\t\t\t\tconsole.log(\"ICE connection status changed : \" + state)\n\t\t\t\t\tif (state == 'connected') {\n\t\t\t\t\t\tthis.resetTime();\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t},\n\t\t\thandleMessage(msg) {\n\t\t\t\tif (msg.type == this.$enums.MESSAGE_TYPE.RTC_ACCEPT) {\n\t\t\t\t\tif (msg.selfSend) {\n\t\t\t\t\t\t// 我在其他终端接受了对方的通话\n\t\t\t\t\t\tthis.$message.success(\"已在其他设备接听\");\n\t\t\t\t\t\tthis.close();\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// 对方接受了我的通话\n\t\t\t\t\t\tthis.peerConnection.setRemoteDescription(new RTCSessionDescription(JSON.parse(msg.content)));\n\t\t\t\t\t\t// 关闭等待提示\n\t\t\t\t\t\tthis.loading = false;\n\t\t\t\t\t\t// 状态为连接中\n\t\t\t\t\t\tthis.state = 'CONNECTED';\n\t\t\t\t\t\t// 停止播放语音\n\t\t\t\t\t\tthis.audio.pause();\n\t\t\t\t\t\t// 发送candidate\n\t\t\t\t\t\tthis.candidates.forEach((candidate) => {\n\t\t\t\t\t\t\tthis.sendCandidate(candidate);\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\n\t\t\t\t} else if (msg.type == this.$enums.MESSAGE_TYPE.RTC_REJECT) {\n\t\t\t\t\tif (msg.selfSend) {\n\t\t\t\t\t\t// 我在其他终端拒绝了对方的通话\n\t\t\t\t\t\tthis.$message.success(\"已在其他设备拒绝通话\");\n\t\t\t\t\t\tthis.close();\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// 对方拒绝了我的通话\n\t\t\t\t\t\tthis.$message.error(\"对方拒绝了您的视频请求\");\n\t\t\t\t\t\tthis.close();\n\t\t\t\t\t}\n\t\t\t\t} else if (msg.type == this.$enums.MESSAGE_TYPE.RTC_FAILED) {\n\t\t\t\t\tthis.$message.error(msg.content)\n\t\t\t\t\tthis.close();\n\t\t\t\t} else if (msg.type == this.$enums.MESSAGE_TYPE.RTC_CANDIDATE) {\n\t\t\t\t\tthis.peerConnection.addIceCandidate(new RTCIceCandidate(JSON.parse(msg.content)));\n\t\t\t\t} else if (msg.type == this.$enums.MESSAGE_TYPE.RTC_HANDUP) {\n\t\t\t\t\tthis.$message.success(\"对方挂断了视频通话\");\n\t\t\t\t\tthis.close();\n\t\t\t\t}\n\t\t\t},\n\t\t\tcall() {\n\t\t\t\tthis.peerConnection.createOffer((offer) => {\n\t\t\t\t\t\tthis.peerConnection.setLocalDescription(offer);\n\t\t\t\t\t\tthis.$http({\n\t\t\t\t\t\t\turl: `/webrtc/private/call?uid=${this.friend.id}`,\n\t\t\t\t\t\t\tmethod: 'post',\n\t\t\t\t\t\t\tdata: JSON.stringify(offer)\n\t\t\t\t\t\t}).then(() => {\n\t\t\t\t\t\t\tthis.callId = this.$store.state.userStore.userInfo.id;\n\t\t\t\t\t\t\tthis.loading = true;\n\t\t\t\t\t\t\tthis.state = 'CONNECTING';\n\t\t\t\t\t\t\tthis.audio.play();\n\t\t\t\t\t\t})\n\t\t\t\t\t},(error) => {\n\t\t\t\t\t\tthis.$message.error(error);\n\t\t\t\t\t});\n\n\t\t\t},\n\t\t\taccept(offer) {\n\t\t\t\tthis.peerConnection.setRemoteDescription(new RTCSessionDescription(offer));\n\t\t\t\tthis.peerConnection.createAnswer((answer) => {\n\t\t\t\t\t\tthis.peerConnection.setLocalDescription(answer);\n\t\t\t\t\t\tthis.$http({\n\t\t\t\t\t\t\turl: `/webrtc/private/accept?uid=${this.friend.id}`,\n\t\t\t\t\t\t\tmethod: 'post',\n\t\t\t\t\t\t\tdata: JSON.stringify(answer)\n\t\t\t\t\t\t}).then(() => {\n\t\t\t\t\t\t\tthis.state = 'CONNECTED';\n\t\t\t\t\t\t\tthis.callerId = this.friend.id;\n\t\t\t\t\t\t})\n\n\t\t\t\t\t},\n\t\t\t\t\t(error) => {\n\t\t\t\t\t\tthis.$message.error(error);\n\t\t\t\t\t});\n\n\t\t\t},\n\t\t\thandup() {\n\t\t\t\tthis.$http({\n\t\t\t\t\turl: `/webrtc/private/handup?uid=${this.friend.id}`,\n\t\t\t\t\tmethod: 'post'\n\t\t\t\t})\n\t\t\t\tthis.close();\n\t\t\t\tthis.$message.success(\"已挂断视频通话\")\n\t\t\t},\n\t\t\tcancel() {\n\t\t\t\tthis.$http({\n\t\t\t\t\turl: `/webrtc/private/cancel?uid=${this.friend.id}`,\n\t\t\t\t\tmethod: 'post'\n\t\t\t\t})\n\t\t\t\tthis.close();\n\t\t\t\tthis.$message.success(\"已停止呼叫视频通话\")\n\t\t\t},\n\t\t\tsendFailed(reason) {\n\t\t\t\tthis.$http({\n\t\t\t\t\turl: `/webrtc/private/failed?uid=${this.friend.id}&reason=${reason}`,\n\t\t\t\t\tmethod: 'post'\n\t\t\t\t})\n\t\t\t},\n\t\t\tsendCandidate(candidate) {\n\t\t\t\tthis.$http({\n\t\t\t\t\turl: `/webrtc/private/candidate?uid=${this.friend.id}`,\n\t\t\t\t\tmethod: 'post',\n\t\t\t\t\tdata: JSON.stringify(candidate)\n\t\t\t\t})\n\t\t\t},\n\t\t\tclose() {\n\t\t\t\tthis.$emit(\"close\");\n\t\t\t\tthis.closeCamera();\n\t\t\t\tthis.loading = false;\n\t\t\t\tthis.state = 'NOT_CONNECTED';\n\t\t\t\tthis.videoTime = 0;\n\t\t\t\tthis.videoTimer && clearInterval(this.videoTimer);\n\t\t\t\tthis.audio.pause();\n\t\t\t\tthis.candidates = [];\n\t\t\t\tthis.$store.commit(\"setUserState\", this.$enums.USER_STATE.FREE);\n\t\t\t\tif (this.peerConnection) {\n\t\t\t\t\tthis.peerConnection.close();\n\t\t\t\t\tthis.peerConnection.onicecandidate = null;\n\t\t\t\t\tthis.peerConnection.onaddstream = null;\n\t\t\t\t}\n\t\t\t\tif (this.$refs.friendVideo) {\n\t\t\t\t\tthis.$refs.friendVideo.srcObject = null;\n\t\t\t\t}\n\n\t\t\t},\n\t\t\tresetTime() {\n\t\t\t\tthis.videoTime = 0;\n\t\t\t\tthis.videoTimer && clearInterval(this.videoTimer);\n\t\t\t\tthis.videoTimer = setInterval(() => {\n\t\t\t\t\tthis.videoTime++;\n\t\t\t\t}, 1000)\n\t\t\t},\n\t\t\thandleClose() {\n\t\t\t\tif (this.state == 'CONNECTED') {\n\t\t\t\t\tthis.handup()\n\t\t\t\t} else if (this.state == 'CONNECTING') {\n\t\t\t\t\tthis.cancel();\n\t\t\t\t} else {\n\t\t\t\t\tthis.close();\n\t\t\t\t}\n\t\t\t},\n\t\t\thasUserMedia() {\n\t\t\t\tnavigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator\n\t\t\t\t\t.mozGetUserMedia ||\n\t\t\t\t\tnavigator.msGetUserMedia;\n\t\t\t\treturn !!navigator.getUserMedia;\n\t\t\t},\n\t\t\thasRTCPeerConnection() {\n\t\t\t\twindow.RTCPeerConnection = window.RTCPeerConnection || window.webkitRTCPeerConnection || window\n\t\t\t\t\t.mozRTCPeerConnection;\n\t\t\t\twindow.RTCSessionDescription = window.RTCSessionDescription || window.webkitRTCSessionDescription || window\n\t\t\t\t\t.mozRTCSessionDescription;\n\t\t\t\twindow.RTCIceCandidate = window.RTCIceCandidate || window.webkitRTCIceCandidate || window\n\t\t\t\t\t.mozRTCIceCandidate;\n\t\t\t\treturn !!window.RTCPeerConnection;\n\t\t\t},\n\t\t\tinitAudio() {\n\t\t\t\tlet url = require(`@/assets/audio/call.wav`);\n\t\t\t\tthis.audio.src = url;\n\t\t\t\tthis.audio.loop = true;\n\t\t\t},\n\t\t\tinitICEServers() {\n\t\t\t\tthis.$http({\n\t\t\t\t\turl: '/webrtc/private/iceservers',\n\t\t\t\t\tmethod: 'get'\n\t\t\t\t}).then((servers) => {\n\t\t\t\t\tthis.configuration.iceServers = servers;\n\t\t\t\t})\n\t\t\t}\n\n\t\t},\n\t\twatch: {\n\t\t\tvisible: {\n\t\t\t\thandler(newValue, oldValue) {\n\t\t\t\t\tif (newValue) {\n\t\t\t\t\t\tthis.init();\n\t\t\t\t\t\t// 用户忙状态\n\t\t\t\t\t\tthis.$store.commit(\"setUserState\", this.$enums.USER_STATE.BUSY);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tcomputed: {\n\t\t\ttitle() {\n\t\t\t\tlet strTitle = `视频聊天-${this.friend.nickName}`;\n\t\t\t\tif (this.state == 'CONNECTED') {\n\t\t\t\t\tstrTitle += `(${this.currentTime})`;\n\t\t\t\t} else if (this.state == 'CONNECTING') {\n\t\t\t\t\tstrTitle += `(呼叫中)`;\n\t\t\t\t}\n\t\t\t\treturn strTitle;\n\t\t\t},\n\t\t\tcurrentTime() {\n\t\t\t\tlet currentTime = 0;\n\t\t\t\tif (this.state == 'CONNECTED' && this.videoTime) {\n\t\t\t\t\tcurrentTime = Math.floor(this.videoTime);\n\t\t\t\t}\n\t\t\t\tlet min = Math.floor(currentTime / 60);\n\t\t\t\tlet sec = currentTime % 60;\n\t\t\t\tlet strTime = min < 10 ? \"0\" : \"\";\n\t\t\t\tstrTime += min;\n\t\t\t\tstrTime += \":\"\n\t\t\t\tstrTime += sec < 10 ? \"0\" : \"\";\n\t\t\t\tstrTime += sec;\n\t\t\t\treturn strTime;\n\t\t\t}\n\t\t},\n\t\tmounted() {\n\t\t\tthis.initAudio();\n\t\t\tthis.initICEServers();\n\t\t}\n\t}\n</script>\n\n<style lang=\"scss\" scoped>\n\t.chat-video {\n\t\tposition: relative;\n\n\t\t.chat-video-box {\n\t\t\tposition: relative;\n\t\t\tborder: #4880b9 solid 1px;\n\t\t\tbackground-color: #eeeeee;\n\n\t\t\t.chat-video-friend {\n\t\t\t\theight: 70vh;\n\n\t\t\t\t.friend-head-image {\n\t\t\t\t\tposition: absolute;\n\t\t\t\t}\n\n\t\t\t\tvideo {\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\theight: 100%;\n\t\t\t\t\tobject-fit: fill;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t.chat-video-mine {\n\t\t\t\tposition: absolute;\n\t\t\t\tz-index: 99999;\n\t\t\t\twidth: 25vh;\n\t\t\t\tright: 0;\n\t\t\t\tbottom: 0;\n\t\t\t\tbox-shadow: 0px 0px 5px #ccc;\n\t\t\t\tbackground-color: #cccccc;\n\n\t\t\t\tvideo {\n\t\t\t\t\twidth: 100%;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t.chat-video-controllbar {\n\t\t\tdisplay: flex;\n\t\t\tjustify-content: space-around;\n\t\t\tpadding: 10px;\n\n\t\t\t.icon {\n\t\t\t\tfont-size: 50px;\n\t\t\t\tcursor: pointer;\n\t\t\t}\n\t\t}\n\t}\n</style>"]}]}